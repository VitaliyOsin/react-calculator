{"ast":null,"code":"var _jsxFileName = \"/home/vitaliyosin/pr/ReactJunior/react-calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./components/calculator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState(\"0\");\n  const [signFlag, setSignFlag] = useState(true);\n  const [sign, setSign] = useState(\"\");\n  const [commaFlag, setCommaFlag] = useState([true, true]);\n  const [startAgain, setStartAgain] = useState(false);\n\n  const inputHandler = m => {\n    setInput(m);\n  };\n\n  const equalHandler = () => {\n    let arr;\n    let res;\n\n    switch (sign) {\n      case \"+\":\n        arr = input.split(\"+\");\n        res = Number(arr[0]) + Number(arr[1]);\n        break;\n\n      case \"-\":\n        arr = input.split(\"-\");\n        res = Number(arr[0]) - Number(arr[1]);\n        break;\n\n      case \"*\":\n        arr = input.split(\"*\");\n        res = Number(arr[0]) * Number(arr[1]);\n        break;\n\n      case \"/\":\n        arr = input.split(\"/\");\n        res = Number(arr[0]) / Number(arr[1]);\n        break;\n\n      default:\n        res = input;\n    }\n\n    res ? setInput(res) : setInput(\"Ошибка!\");\n    setCommaFlag(true);\n    setSignFlag(true);\n    setStartAgain(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Calculator, {\n    inputHandler: inputHandler,\n    input: input,\n    signFlag: signFlag,\n    setSignFlag: setSignFlag,\n    equalHandler: equalHandler,\n    setSign: setSign,\n    commaFlag: commaFlag,\n    setCommaFlag: setCommaFlag,\n    startAgain: startAgain,\n    setStartAgain: setStartAgain\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ytgv8d+IPjp+b+KXVX75Vo+yWWU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/vitaliyosin/pr/ReactJunior/react-calculator/src/App.js"],"names":["useState","Calculator","App","input","setInput","signFlag","setSignFlag","sign","setSign","commaFlag","setCommaFlag","startAgain","setStartAgain","inputHandler","m","equalHandler","arr","res","split","Number"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAA1C;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AAC1BV,IAAAA,QAAQ,CAACU,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIC,GAAJ;AACA,QAAIC,GAAJ;;AACA,YAAQV,IAAR;AACE,WAAK,GAAL;AACES,QAAAA,GAAG,GAAGb,KAAK,CAACe,KAAN,CAAY,GAAZ,CAAN;AACAD,QAAAA,GAAG,GAAGE,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiBG,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAA7B;AACA;;AACF,WAAK,GAAL;AACEA,QAAAA,GAAG,GAAGb,KAAK,CAACe,KAAN,CAAY,GAAZ,CAAN;AACAD,QAAAA,GAAG,GAAGE,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiBG,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAA7B;AACA;;AACF,WAAK,GAAL;AACEA,QAAAA,GAAG,GAAGb,KAAK,CAACe,KAAN,CAAY,GAAZ,CAAN;AACAD,QAAAA,GAAG,GAAGE,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiBG,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAA7B;AACA;;AACF,WAAK,GAAL;AACEA,QAAAA,GAAG,GAAGb,KAAK,CAACe,KAAN,CAAY,GAAZ,CAAN;AACAD,QAAAA,GAAG,GAAGE,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiBG,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAA7B;AACA;;AACF;AACEC,QAAAA,GAAG,GAAGd,KAAN;AAlBJ;;AAoBAc,IAAAA,GAAG,GAAGb,QAAQ,CAACa,GAAD,CAAX,GAAmBb,QAAQ,CAAC,SAAD,CAA9B;AACAM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GA3BD;;AA4BA,sBACE,QAAC,UAAD;AACE,IAAA,YAAY,EAAEC,YADhB;AAEE,IAAA,KAAK,EAAEV,KAFT;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,YAAY,EAAES,YALhB;AAME,IAAA,OAAO,EAAEP,OANX;AAOE,IAAA,SAAS,EAAEC,SAPb;AAQE,IAAA,YAAY,EAAEC,YARhB;AASE,IAAA,UAAU,EAAEC,UATd;AAUE,IAAA,aAAa,EAAEC;AAVjB;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAnDQV,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./components/calculator\";\n\nfunction App() {\n  const [input, setInput] = useState(\"0\");\n  const [signFlag, setSignFlag] = useState(true);\n  const [sign, setSign] = useState(\"\");\n  const [commaFlag, setCommaFlag] = useState([true, true]);\n  const [startAgain, setStartAgain] = useState(false);\n  const inputHandler = (m) => {\n    setInput(m);\n  };\n  const equalHandler = () => {\n    let arr;\n    let res;\n    switch (sign) {\n      case \"+\":\n        arr = input.split(\"+\");\n        res = Number(arr[0]) + Number(arr[1]);\n        break;\n      case \"-\":\n        arr = input.split(\"-\");\n        res = Number(arr[0]) - Number(arr[1]);\n        break;\n      case \"*\":\n        arr = input.split(\"*\");\n        res = Number(arr[0]) * Number(arr[1]);\n        break;\n      case \"/\":\n        arr = input.split(\"/\");\n        res = Number(arr[0]) / Number(arr[1]);\n        break;\n      default:\n        res = input;\n    }\n    res ? setInput(res) : setInput(\"Ошибка!\");\n    setCommaFlag(true);\n    setSignFlag(true);\n    setStartAgain(true);\n  };\n  return (\n    <Calculator\n      inputHandler={inputHandler}\n      input={input}\n      signFlag={signFlag}\n      setSignFlag={setSignFlag}\n      equalHandler={equalHandler}\n      setSign={setSign}\n      commaFlag={commaFlag}\n      setCommaFlag={setCommaFlag}\n      startAgain={startAgain}\n      setStartAgain={setStartAgain}\n    />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}