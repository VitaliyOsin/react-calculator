{"ast":null,"code":"export const step = n => 10 ** (n.toString().split(\".\")[1] || \"\").length;\nexport const calc = (num1, num2, oper) => {\n  const kf = Math.max(...[step(num1), step(num2)]);\n  let res;\n  console.log([step(num1), step(num2)]);\n  console.log(kf);\n\n  switch (oper) {\n    case \"+\":\n      res = (Number(num1) * kf + Number(num2) * kf) / kf;\n      break;\n\n    case \"-\":\n      res = (Number(num1) * kf - Number(num2) * kf) / kf;\n      break;\n\n    case \"*\":\n      res = Number(num1) * kf * Number(num2) * kf / kf;\n      break;\n\n    case \"/\":\n      res = Number(num1) * kf / Number(num2) * kf / kf;\n      break;\n\n    default:\n      res = \"0\";\n  }\n\n  console.log(\"RES: \", res);\n  return res;\n};","map":{"version":3,"sources":["/home/vitaliyosin/pr/ReactJunior/react-calculator/src/utils/index.js"],"names":["step","n","toString","split","length","calc","num1","num2","oper","kf","Math","max","res","console","log","Number"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAIC,CAAD,IAAO,MAAM,CAACA,CAAC,CAACC,QAAF,GAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,KAA8B,EAA/B,EAAmCC,MAA7D;AAEP,OAAO,MAAMC,IAAI,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,KAAsB;AACxC,QAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAG,CAACX,IAAI,CAACM,IAAD,CAAL,EAAaN,IAAI,CAACO,IAAD,CAAjB,CAAZ,CAAX;AACA,MAAIK,GAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACd,IAAI,CAACM,IAAD,CAAL,EAAaN,IAAI,CAACO,IAAD,CAAjB,CAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;;AACA,UAAQD,IAAR;AACE,SAAK,GAAL;AACEI,MAAAA,GAAG,GAAG,CAACG,MAAM,CAACT,IAAD,CAAN,GAAeG,EAAf,GAAoBM,MAAM,CAACR,IAAD,CAAN,GAAeE,EAApC,IAA0CA,EAAhD;AACA;;AACF,SAAK,GAAL;AACEG,MAAAA,GAAG,GAAG,CAACG,MAAM,CAACT,IAAD,CAAN,GAAeG,EAAf,GAAoBM,MAAM,CAACR,IAAD,CAAN,GAAeE,EAApC,IAA0CA,EAAhD;AACA;;AACF,SAAK,GAAL;AACEG,MAAAA,GAAG,GAAIG,MAAM,CAACT,IAAD,CAAN,GAAeG,EAAf,GAAoBM,MAAM,CAACR,IAAD,CAA1B,GAAmCE,EAApC,GAA0CA,EAAhD;AACA;;AACF,SAAK,GAAL;AACEG,MAAAA,GAAG,GAAMG,MAAM,CAACT,IAAD,CAAN,GAAeG,EAAhB,GAAsBM,MAAM,CAACR,IAAD,CAA7B,GAAuCE,EAAxC,GAA8CA,EAApD;AACA;;AACF;AACEG,MAAAA,GAAG,GAAG,GAAN;AAdJ;;AAgBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACA,SAAOA,GAAP;AACD,CAvBM","sourcesContent":["export const step = (n) => 10 ** (n.toString().split(\".\")[1] || \"\").length;\n\nexport const calc = (num1, num2, oper) => {\n  const kf = Math.max(...[step(num1), step(num2)]);\n  let res;\n  console.log([step(num1), step(num2)]);\n  console.log(kf);\n  switch (oper) {\n    case \"+\":\n      res = (Number(num1) * kf + Number(num2) * kf) / kf;\n      break;\n    case \"-\":\n      res = (Number(num1) * kf - Number(num2) * kf) / kf;\n      break;\n    case \"*\":\n      res = (Number(num1) * kf * Number(num2) * kf) / kf;\n      break;\n    case \"/\":\n      res = (((Number(num1) * kf) / Number(num2)) * kf) / kf;\n      break;\n    default:\n      res = \"0\";\n  }\n  console.log(\"RES: \", res);\n  return res;\n};\n"]},"metadata":{},"sourceType":"module"}