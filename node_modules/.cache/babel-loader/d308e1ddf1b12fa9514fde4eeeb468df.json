{"ast":null,"code":"const step = n => 10 ** (n.toString().split(\".\")[1] || \"\").length;\n\nexport const calc = (num1, num2, oper) => {\n  const kf = Math.max(...[step(num1), step(num2)]);\n  let res;\n\n  switch (oper) {\n    case \"+\":\n      res = (Number(num1) * kf + Number(num2) * kf) / kf;\n      break;\n\n    case \"-\":\n      res = (Number(num1) * kf - Number(num2) * kf) / kf;\n      break;\n\n    case \"*\":\n      res = Number(num1) * kf * (Number(num2) * kf) / kf ** 2;\n      break;\n\n    case \"/\":\n      if (num2 === \"0\") {\n        res = \"Ой-ой-ой!\";\n        break;\n      }\n\n      res = Number(num1) * kf / Number(num2) * kf / kf;\n      break;\n\n    default:\n      res = \"0\";\n  }\n\n  return res;\n};","map":{"version":3,"sources":["/home/vitaliyosin/pr/ReactJunior/react-calculator/src/utils/index.js"],"names":["step","n","toString","split","length","calc","num1","num2","oper","kf","Math","max","res","Number"],"mappings":"AAAA,MAAMA,IAAI,GAAIC,CAAD,IAAO,MAAM,CAACA,CAAC,CAACC,QAAF,GAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,KAA8B,EAA/B,EAAmCC,MAA7D;;AAEA,OAAO,MAAMC,IAAI,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,KAAsB;AACxC,QAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAG,CAACX,IAAI,CAACM,IAAD,CAAL,EAAaN,IAAI,CAACO,IAAD,CAAjB,CAAZ,CAAX;AACA,MAAIK,GAAJ;;AACA,UAAQJ,IAAR;AACE,SAAK,GAAL;AACEI,MAAAA,GAAG,GAAG,CAACC,MAAM,CAACP,IAAD,CAAN,GAAeG,EAAf,GAAoBI,MAAM,CAACN,IAAD,CAAN,GAAeE,EAApC,IAA0CA,EAAhD;AACA;;AACF,SAAK,GAAL;AACEG,MAAAA,GAAG,GAAG,CAACC,MAAM,CAACP,IAAD,CAAN,GAAeG,EAAf,GAAoBI,MAAM,CAACN,IAAD,CAAN,GAAeE,EAApC,IAA0CA,EAAhD;AACA;;AACF,SAAK,GAAL;AACEG,MAAAA,GAAG,GAAIC,MAAM,CAACP,IAAD,CAAN,GAAeG,EAAf,IAAqBI,MAAM,CAACN,IAAD,CAAN,GAAeE,EAApC,CAAD,GAA4CA,EAAE,IAAI,CAAxD;AACA;;AACF,SAAK,GAAL;AACE,UAAIF,IAAI,KAAK,GAAb,EAAkB;AAChBK,QAAAA,GAAG,GAAG,WAAN;AACA;AACD;;AACDA,MAAAA,GAAG,GAAMC,MAAM,CAACP,IAAD,CAAN,GAAeG,EAAhB,GAAsBI,MAAM,CAACN,IAAD,CAA7B,GAAuCE,EAAxC,GAA8CA,EAApD;AACA;;AACF;AACEG,MAAAA,GAAG,GAAG,GAAN;AAlBJ;;AAoBA,SAAOA,GAAP;AACD,CAxBM","sourcesContent":["const step = (n) => 10 ** (n.toString().split(\".\")[1] || \"\").length;\n\nexport const calc = (num1, num2, oper) => {\n  const kf = Math.max(...[step(num1), step(num2)]);\n  let res;\n  switch (oper) {\n    case \"+\":\n      res = (Number(num1) * kf + Number(num2) * kf) / kf;\n      break;\n    case \"-\":\n      res = (Number(num1) * kf - Number(num2) * kf) / kf;\n      break;\n    case \"*\":\n      res = (Number(num1) * kf * (Number(num2) * kf)) / kf ** 2;\n      break;\n    case \"/\":\n      if (num2 === \"0\") {\n        res = \"Ой-ой-ой!\";\n        break;\n      }\n      res = (((Number(num1) * kf) / Number(num2)) * kf) / kf;\n      break;\n    default:\n      res = \"0\";\n  }\n  return res;\n};\n"]},"metadata":{},"sourceType":"module"}