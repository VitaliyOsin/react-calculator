{"ast":null,"code":"var _jsxFileName = \"/home/vitaliyosin/pr/ReactJunior/react-calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./components/calculator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState(\"0\");\n  const [signFlag, setSignFlag] = useState(true);\n  const [sign, setSign] = useState(\"\");\n  const [commaFlag, setCommaFlag] = useState([true, true]);\n\n  const inputHandler = m => {\n    setInput(m);\n  };\n\n  const equalHandler = () => {\n    let arr;\n    let res;\n\n    switch (sign) {\n      case \"+\":\n        arr = input.split(\"+\");\n        res = Number(arr[0]) + Number(arr[1]);\n        break;\n\n      case \"-\":\n        arr = input.split(\"-\");\n        res = Number(arr[0]) - Number(arr[1]);\n        break;\n\n      case \"*\":\n        arr = input.split(\"*\");\n        res = Number(arr[0]) * Number(arr[1]);\n        break;\n\n      case \"/\":\n        arr = input.split(\"/\");\n        res = Number(arr[0]) / Number(arr[1]);\n        break;\n\n      default:\n        return;\n    }\n\n    setInput(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Calculator, {\n    inputHandler: inputHandler,\n    input: input,\n    signFlag: signFlag,\n    setSignFlag: setSignFlag,\n    equalHandler: equalHandler,\n    setSign: setSign\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pY5eqKV4n67hdYXoyROK+KEMOIU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/vitaliyosin/pr/ReactJunior/react-calculator/src/App.js"],"names":["useState","Calculator","App","input","setInput","signFlag","setSignFlag","sign","setSign","commaFlag","setCommaFlag","inputHandler","m","equalHandler","arr","res","split","Number"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,GAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAC,IAAD,EAAO,IAAP,CAAD,CAA1C;;AACA,QAAMW,YAAY,GAAIC,CAAD,IAAO;AAC1BR,IAAAA,QAAQ,CAACQ,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIC,GAAJ;AACA,QAAIC,GAAJ;;AACA,YAAQR,IAAR;AACE,WAAK,GAAL;AACEO,QAAAA,GAAG,GAAGX,KAAK,CAACa,KAAN,CAAY,GAAZ,CAAN;AACAD,QAAAA,GAAG,GAAGE,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiBG,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAA7B;AACA;;AACF,WAAK,GAAL;AACEA,QAAAA,GAAG,GAAGX,KAAK,CAACa,KAAN,CAAY,GAAZ,CAAN;AACAD,QAAAA,GAAG,GAAGE,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiBG,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAA7B;AACA;;AACF,WAAK,GAAL;AACEA,QAAAA,GAAG,GAAGX,KAAK,CAACa,KAAN,CAAY,GAAZ,CAAN;AACAD,QAAAA,GAAG,GAAGE,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiBG,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAA7B;AACA;;AACF,WAAK,GAAL;AACEA,QAAAA,GAAG,GAAGX,KAAK,CAACa,KAAN,CAAY,GAAZ,CAAN;AACAD,QAAAA,GAAG,GAAGE,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAAN,GAAiBG,MAAM,CAACH,GAAG,CAAC,CAAD,CAAJ,CAA7B;AACA;;AACF;AACE;AAlBJ;;AAoBAV,IAAAA,QAAQ,CAACW,GAAD,CAAR;AACD,GAxBD;;AAyBA,sBACE,QAAC,UAAD;AACE,IAAA,YAAY,EAAEJ,YADhB;AAEE,IAAA,KAAK,EAAER,KAFT;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,YAAY,EAAEO,YALhB;AAME,IAAA,OAAO,EAAEL;AANX;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA3CQN,G;;KAAAA,G;AA6CT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./components/calculator\";\n\nfunction App() {\n  const [input, setInput] = useState(\"0\");\n  const [signFlag, setSignFlag] = useState(true);\n  const [sign, setSign] = useState(\"\");\n  const [commaFlag, setCommaFlag] = useState([true, true]);\n  const inputHandler = (m) => {\n    setInput(m);\n  };\n  const equalHandler = () => {\n    let arr;\n    let res;\n    switch (sign) {\n      case \"+\":\n        arr = input.split(\"+\");\n        res = Number(arr[0]) + Number(arr[1]);\n        break;\n      case \"-\":\n        arr = input.split(\"-\");\n        res = Number(arr[0]) - Number(arr[1]);\n        break;\n      case \"*\":\n        arr = input.split(\"*\");\n        res = Number(arr[0]) * Number(arr[1]);\n        break;\n      case \"/\":\n        arr = input.split(\"/\");\n        res = Number(arr[0]) / Number(arr[1]);\n        break;\n      default:\n        return;\n    }\n    setInput(res);\n  };\n  return (\n    <Calculator\n      inputHandler={inputHandler}\n      input={input}\n      signFlag={signFlag}\n      setSignFlag={setSignFlag}\n      equalHandler={equalHandler}\n      setSign={setSign}\n    />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}